{"ast":null,"code":"var _jsxFileName = \"/Users/jordijove/Documents/CODE/repo-table/src/content/RepoPage/RepoTable.js\";\nimport React from 'react';\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableExpandHeader, TableHeader, TableBody, TableExpandRow, TableCell, TableExpandedRow } from 'carbon-components-react';\n\nvar RepoTable = function RepoTable(_ref) {\n  var rows = _ref.rows,\n      headers = _ref.headers;\n\n  var getRowDescription = function getRowDescription(rowId) {\n    var row = rows.find(function (_ref2) {\n      var id = _ref2.id;\n      return id === rowId;\n    });\n    return row ? row.description : '';\n  };\n\n  return React.createElement(DataTable, {\n    rows: rows,\n    headers: headers,\n    render: function render(_ref3) {\n      var rows = _ref3.rows,\n          headers = _ref3.headers,\n          getHeaderProps = _ref3.getHeaderProps,\n          getRowProps = _ref3.getRowProps,\n          getTableProps = _ref3.getTableProps;\n      return React.createElement(TableContainer, {\n        title: \"Carbon Repositories\",\n        description: \"A collection of public Carbon repositories.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Table, Object.assign({}, getTableProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(TableExpandHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), headers.map(function (header) {\n        return React.createElement(TableHeader, Object.assign({}, getHeaderProps({\n          header: header\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), header.header);\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return React.createElement(React.Fragment, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(TableExpandRow, Object.assign({}, getRowProps({\n          row: row\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), row.cells.map(function (cell) {\n          return React.createElement(TableCell, {\n            key: cell.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, cell.value);\n        })), React.createElement(TableExpandedRow, {\n          colSpan: headers.length + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, getRowDescription(row.id))));\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n};\n\nexport default RepoTable;","map":{"version":3,"sources":["/Users/jordijove/Documents/CODE/repo-table/src/content/RepoPage/RepoTable.js"],"names":["React","DataTable","TableContainer","Table","TableHead","TableRow","TableExpandHeader","TableHeader","TableBody","TableExpandRow","TableCell","TableExpandedRow","RepoTable","rows","headers","getRowDescription","rowId","row","find","id","description","getHeaderProps","getRowProps","getTableProps","map","header","cells","cell","value","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,iBANF,EAOEC,WAPF,EAQEC,SARF,EASEC,cATF,EAUEC,SAVF,EAWEC,gBAXF,QAYO,yBAZP;;AAcA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAuB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACvC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACjC,QAAMC,GAAG,GAAGJ,IAAI,CAACK,IAAL,CAAU;AAAA,UAAGC,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAE,KAAKH,KAAnB;AAAA,KAAV,CAAZ;AACA,WAAOC,GAAG,GAAGA,GAAG,CAACG,WAAP,GAAqB,EAA/B;AACD,GAHD;;AAKA,SACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEP,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,MAAM,EAAE;AAAA,UACND,IADM,SACNA,IADM;AAAA,UAENC,OAFM,SAENA,OAFM;AAAA,UAGNO,cAHM,SAGNA,cAHM;AAAA,UAINC,WAJM,SAINA,WAJM;AAAA,UAKNC,aALM,SAKNA,aALM;AAAA,aAON,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,qBADR;AAEE,QAAA,WAAW,EAAC,6CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,KAAD,oBAAWA,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGT,OAAO,CAACU,GAAR,CAAY,UAAAC,MAAM;AAAA,eACjB,oBAAC,WAAD,oBAAiBJ,cAAc,CAAC;AAAEI,UAAAA,MAAM,EAANA;AAAF,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACGA,MAAM,CAACA,MADV,CADiB;AAAA,OAAlB,CAFH,CADF,CADF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,IAAI,CAACW,GAAL,CAAS,UAAAP,GAAG;AAAA,eACX,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAEA,GAAG,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,cAAD,oBAAoBG,WAAW,CAAC;AAAEL,UAAAA,GAAG,EAAHA;AAAF,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACGA,GAAG,CAACS,KAAJ,CAAUF,GAAV,CAAc,UAAAG,IAAI;AAAA,iBACjB,oBAAC,SAAD;AAAW,YAAA,GAAG,EAAEA,IAAI,CAACR,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BQ,IAAI,CAACC,KAA/B,CADiB;AAAA,SAAlB,CADH,CADF,EAME,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEd,OAAO,CAACe,MAAR,GAAiB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAId,iBAAiB,CAACE,GAAG,CAACE,EAAL,CAArB,CADF,CANF,CADW;AAAA,OAAZ,CADH,CAXF,CAHF,CAPM;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD,CAlDD;;AAoDA,eAAeP,SAAf","sourcesContent":["import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst RepoTable = ({ rows, headers }) => {\n  const getRowDescription = rowId => {\n    const row = rows.find(({ id }) => id === rowId);\n    return row ? row.description : '';\n  };\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Carbon Repositories\"\n          description=\"A collection of public Carbon repositories.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>{getRowDescription(row.id)}</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default RepoTable;\n"]},"metadata":{},"sourceType":"module"}