{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jordijove/Documents/CODE/carbon-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jordijove/Documents/CODE/carbon-tutorial/src/content/RepoPage/RepoPage.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query REPO_QUERY {\\n    # Let's use carbon as our organization\\n    organization(login: \\\"carbon-design-system\\\") {\\n      # We'll grab all the repositories in one go. To load more resources\\n      # continuously, see the advanced topics.\\n      repositories(first: 75, orderBy: { field: UPDATED_AT, direction: DESC }) {\\n        totalCount\\n        nodes {\\n          url\\n          homepageUrl\\n          issues(filterBy: { states: OPEN }) {\\n            totalCount\\n          }\\n          stargazers {\\n            totalCount\\n          }\\n          releases(first: 1) {\\n            totalCount\\n            nodes {\\n              name\\n            }\\n          }\\n          name\\n          updatedAt\\n          createdAt\\n          description\\n          id\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport RepoTable from './RepoTable';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nvar REPO_QUERY = gql(_templateObject());\nvar headers = [{\n  key: 'name',\n  header: 'Name'\n}, {\n  key: 'createdAt',\n  header: 'Created'\n}, {\n  key: 'updatedAt',\n  header: 'Updated'\n}, {\n  key: 'issueCount',\n  header: 'Open Issues'\n}, {\n  key: 'stars',\n  header: 'Stars'\n}, {\n  key: 'links',\n  header: 'Links'\n}];\nvar rows = [{\n  id: '1',\n  name: 'Repo 1',\n  createdAt: 'Date',\n  updatedAt: 'Date',\n  issueCount: '123',\n  stars: '456',\n  links: 'Links'\n}, {\n  id: '2',\n  name: 'Repo 2',\n  createdAt: 'Date',\n  updatedAt: 'Date',\n  issueCount: '123',\n  stars: '456',\n  links: 'Links'\n}, {\n  id: '3',\n  name: 'Repo 3',\n  createdAt: 'Date',\n  updatedAt: 'Date',\n  issueCount: '123',\n  stars: '456',\n  links: 'Links'\n}];\n\nvar RepoPage = function RepoPage() {\n  return React.createElement(\"div\", {\n    className: \"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bx--row repo-page__r1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bx--col-lg-16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(RepoTable, {\n    headers: headers,\n    rows: rows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))));\n};\n\nexport default RepoPage;","map":{"version":3,"sources":["/Users/jordijove/Documents/CODE/carbon-tutorial/src/content/RepoPage/RepoPage.js"],"names":["React","RepoTable","gql","Query","REPO_QUERY","headers","key","header","rows","id","name","createdAt","updatedAt","issueCount","stars","links","RepoPage"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,IAAMC,UAAU,GAAGF,GAAH,mBAAhB;AAkCA,IAAMG,OAAO,GAAG,CACd;AACEC,EAAAA,GAAG,EAAE,MADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADc,EAKd;AACED,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CALc,EASd;AACED,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CATc,EAad;AACED,EAAAA,GAAG,EAAE,YADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAbc,EAiBd;AACED,EAAAA,GAAG,EAAE,OADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAjBc,EAqBd;AACED,EAAAA,GAAG,EAAE,OADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CArBc,CAAhB;AA2BA,IAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAE,MAHb;AAIEC,EAAAA,SAAS,EAAE,MAJb;AAKEC,EAAAA,UAAU,EAAE,KALd;AAMEC,EAAAA,KAAK,EAAE,KANT;AAOEC,EAAAA,KAAK,EAAE;AAPT,CADW,EAUX;AACEN,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAE,MAHb;AAIEC,EAAAA,SAAS,EAAE,MAJb;AAKEC,EAAAA,UAAU,EAAE,KALd;AAMEC,EAAAA,KAAK,EAAE,KANT;AAOEC,EAAAA,KAAK,EAAE;AAPT,CAVW,EAmBX;AACEN,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAE,MAHb;AAIEC,EAAAA,SAAS,EAAE,MAJb;AAKEC,EAAAA,UAAU,EAAE,KALd;AAMEC,EAAAA,KAAK,EAAE,KANT;AAOEC,EAAAA,KAAK,EAAE;AAPT,CAnBW,CAAb;;AA8BA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SACE;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEX,OAApB;AAA6B,IAAA,IAAI,EAAEG,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD,CAVD;;AAYA,eAAeQ,QAAf","sourcesContent":["import React from 'react';\nimport RepoTable from './RepoTable';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst REPO_QUERY = gql`\n  query REPO_QUERY {\n    # Let's use carbon as our organization\n    organization(login: \"carbon-design-system\") {\n      # We'll grab all the repositories in one go. To load more resources\n      # continuously, see the advanced topics.\n      repositories(first: 75, orderBy: { field: UPDATED_AT, direction: DESC }) {\n        totalCount\n        nodes {\n          url\n          homepageUrl\n          issues(filterBy: { states: OPEN }) {\n            totalCount\n          }\n          stargazers {\n            totalCount\n          }\n          releases(first: 1) {\n            totalCount\n            nodes {\n              name\n            }\n          }\n          name\n          updatedAt\n          createdAt\n          description\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'createdAt',\n    header: 'Created',\n  },\n  {\n    key: 'updatedAt',\n    header: 'Updated',\n  },\n  {\n    key: 'issueCount',\n    header: 'Open Issues',\n  },\n  {\n    key: 'stars',\n    header: 'Stars',\n  },\n  {\n    key: 'links',\n    header: 'Links',\n  },\n];\n\nconst rows = [\n  {\n    id: '1',\n    name: 'Repo 1',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '2',\n    name: 'Repo 2',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '3',\n    name: 'Repo 3',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n];\n\nconst RepoPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <RepoTable headers={headers} rows={rows} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoPage;\n"]},"metadata":{},"sourceType":"module"}